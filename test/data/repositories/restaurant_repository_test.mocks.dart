// Mocks generated by Mockito 5.3.2 from annotations
// in submission_final/test/data/repositories/restaurant_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:submission_final/data/sources/local/favorite_local_source.dart'
    as _i5;
import 'package:submission_final/data/sources/server/restaurant_server_source.dart'
    as _i3;
import 'package:submission_final/domain/entities/favorite.dart' as _i6;
import 'package:submission_final/domain/entities/restaurant.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeRestaurant_0 extends _i1.SmartFake implements _i2.Restaurant {
  _FakeRestaurant_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RestaurantServerSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestaurantServerSource extends _i1.Mock
    implements _i3.RestaurantServerSource {
  MockRestaurantServerSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.Restaurant>> getListRestaurant() => (super.noSuchMethod(
        Invocation.method(
          #getListRestaurant,
          [],
        ),
        returnValue: _i4.Future<List<_i2.Restaurant>>.value(<_i2.Restaurant>[]),
      ) as _i4.Future<List<_i2.Restaurant>>);
  @override
  _i4.Future<_i2.Restaurant> getDetailRestaurant({required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailRestaurant,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i2.Restaurant>.value(_FakeRestaurant_0(
          this,
          Invocation.method(
            #getDetailRestaurant,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Restaurant>);
  @override
  _i4.Future<List<_i2.Restaurant>> searchRestaurant({required String? query}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRestaurant,
          [],
          {#query: query},
        ),
        returnValue: _i4.Future<List<_i2.Restaurant>>.value(<_i2.Restaurant>[]),
      ) as _i4.Future<List<_i2.Restaurant>>);
}

/// A class which mocks [FavoriteLocalSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockFavoriteLocalSource extends _i1.Mock
    implements _i5.FavoriteLocalSource {
  MockFavoriteLocalSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> insertFavorite(_i6.Favorite? restaurant) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertFavorite,
          [restaurant],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<String> removeFavorite(_i6.Favorite? restaurant) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [restaurant],
        ),
        returnValue: _i4.Future<String>.value(''),
      ) as _i4.Future<String>);
  @override
  _i4.Future<_i6.Favorite?> getFavorite(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getFavorite,
          [id],
        ),
        returnValue: _i4.Future<_i6.Favorite?>.value(),
      ) as _i4.Future<_i6.Favorite?>);
  @override
  _i4.Future<List<_i6.Favorite>> getAllFavorite() => (super.noSuchMethod(
        Invocation.method(
          #getAllFavorite,
          [],
        ),
        returnValue: _i4.Future<List<_i6.Favorite>>.value(<_i6.Favorite>[]),
      ) as _i4.Future<List<_i6.Favorite>>);
}
