// Mocks generated by Mockito 5.3.2 from annotations
// in submission_final/test/domain/usecases/get_list_restaurant_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:submission_final/core/error/failure.dart' as _i5;
import 'package:submission_final/domain/entities/restaurant.dart' as _i6;
import 'package:submission_final/domain/repositories/restaurant_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RestaurantRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestaurantRepository extends _i1.Mock
    implements _i3.RestaurantRepository {
  MockRestaurantRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Restaurant>>>
      getListRestaurant() => (super.noSuchMethod(
            Invocation.method(
              #getListRestaurant,
              [],
            ),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.Restaurant>>>.value(
                    _FakeEither_0<_i5.Failure, List<_i6.Restaurant>>(
              this,
              Invocation.method(
                #getListRestaurant,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Restaurant>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Restaurant>> getDetailRestaurant(
          {required String? id}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDetailRestaurant,
          [],
          {#id: id},
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Restaurant>>.value(
            _FakeEither_0<_i5.Failure, _i6.Restaurant>(
          this,
          Invocation.method(
            #getDetailRestaurant,
            [],
            {#id: id},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.Restaurant>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Restaurant>>> searchRestaurant(
          {required String? query}) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchRestaurant,
          [],
          {#query: query},
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Restaurant>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Restaurant>>(
          this,
          Invocation.method(
            #searchRestaurant,
            [],
            {#query: query},
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Restaurant>>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> saveFavorite(
          _i6.Restaurant? restaurant) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveFavorite,
          [restaurant],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #saveFavorite,
            [restaurant],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, String>> removeFavorite(
          _i6.Restaurant? restaurant) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFavorite,
          [restaurant],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String>>.value(
            _FakeEither_0<_i5.Failure, String>(
          this,
          Invocation.method(
            #removeFavorite,
            [restaurant],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String>>);
  @override
  _i4.Future<bool> hasAddedToFavorite(String? id) => (super.noSuchMethod(
        Invocation.method(
          #hasAddedToFavorite,
          [id],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Restaurant>>> getAllFavorite() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllFavorite,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.Restaurant>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.Restaurant>>(
          this,
          Invocation.method(
            #getAllFavorite,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Restaurant>>>);
}
